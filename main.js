(()=>{"use strict";var n={28:(n,t,e)=>{e.d(t,{Z:()=>A});var o=e(537),i=e.n(o),r=e(645),a=e.n(r)()(i());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap);"]),a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Rubik+Microbe&display=swap);"]),a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap);"]),a.push([n.id,'/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh3 {\n  margin: 0;\n}\n\n/* Set core body defaults */\nbody {\n  background-color: #e5e7eb;\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don\'t have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n.container {\n  font-family: "Quicksand", sans-serif;\n  width: 50%;\n  margin: auto;\n  padding: 32px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.weather-container {\n  background-color: white;\n  margin-top: 32px;\n  padding: 60px 40px;\n  border-radius: 8px;\n  box-shadow: 0 16px 20px 5px rgb(0 0 0 / 20%);\n}\n.name {\n  font-family: "Montserrat", sans-serif;\n  font-size: 40px;\n  font-weight: 500;\n  line-height: 1;\n  text-align: center;\n}\n.city-info-top {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.temp {\n  font-size: 34px;\n  font-weight: 600;\n  line-height: 1;\n  padding-bottom: 16px;\n}\n.description {\n  font-size: 20px;\n  font-weight: 500;\n  text-transform: capitalize;\n}\n.city-info-bottom {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  margin-top: 40px;\n}\n.city-temp-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\nh1 {\n  font-family: "Rubik Microbe", cursive;\n  font-size: 48px;\n  font-weight: 600;\n  padding-bottom: 16px;\n}\nh3 {\n  padding-top: 12px;\n  font-size: 17px;\n}\n.search-section {\n  display: flex;\n  gap: 8px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n}\ninput {\n  width: 40%;\n  padding: 4px 8px;\n  font-size: 16px;\n  line-height: 1;\n  outline: none;\n  border-radius: 4px;\n  border: 1px solid #cfcfcf;\n}\nbutton {\n  font-size: 16px;\n  font-weight: 500;\n  padding: 4px 12px;\n  background-color: #1a1a1a;\n  color: white;\n  border: 1px solid;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.footer {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  padding: 10px;\n}\n\n.fa-github {\n  font-size: 24px;\n  transition: transform 0.3s ease-in-out;\n}\n\n.fa-github:hover {\n  transform: rotate(360deg) scale(1.2);\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAIA,qBAAqB;AACrB;;;EAGE,sBAAsB;AACxB;;AAEA,0BAA0B;AAC1B;;;EAGE,SAAS;AACX;;AAEA,2BAA2B;AAC3B;EACE,yBAAyB;EACzB,iBAAiB;EACjB,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA,0DAA0D;AAC1D;EACE,8BAA8B;AAChC;;AAEA,oCAAoC;AACpC;;EAEE,eAAe;EACf,cAAc;AAChB;;AAEA,yCAAyC;AACzC;;;;EAIE,aAAa;AACf;;AAEA,gGAAgG;AAChG;EACE;IACE,qBAAqB;EACvB;;EAEA;;;IAGE,qCAAqC;IACrC,uCAAuC;IACvC,sCAAsC;IACtC,gCAAgC;EAClC;AACF;AACA;EACE,oCAAoC;EACpC,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;EAClB,4CAA4C;AAC9C;AACA;EACE,qCAAqC;EACrC,eAAe;EACf,gBAAgB;EAChB,cAAc;EACd,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,eAAe;EACf,gBAAgB;EAChB,cAAc;EACd,oBAAoB;AACtB;AACA;EACE,eAAe;EACf,gBAAgB;EAChB,0BAA0B;AAC5B;AACA;EACE,aAAa;EACb,qCAAqC;EACrC,SAAS;EACT,gBAAgB;AAClB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,qCAAqC;EACrC,eAAe;EACf,gBAAgB;EAChB,oBAAoB;AACtB;AACA;EACE,iBAAiB;EACjB,eAAe;AACjB;AACA;EACE,aAAa;EACb,QAAQ;EACR,WAAW;EACX,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,UAAU;EACV,gBAAgB;EAChB,eAAe;EACf,cAAc;EACd,aAAa;EACb,kBAAkB;EAClB,yBAAyB;AAC3B;AACA;EACE,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,yBAAyB;EACzB,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,OAAO;EACP,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;EACT,WAAW;EACX,aAAa;AACf;;AAEA;EACE,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap");\n@import url("https://fonts.googleapis.com/css2?family=Rubik+Microbe&display=swap");\n@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap");\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh3 {\n  margin: 0;\n}\n\n/* Set core body defaults */\nbody {\n  background-color: #e5e7eb;\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don\'t have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n.container {\n  font-family: "Quicksand", sans-serif;\n  width: 50%;\n  margin: auto;\n  padding: 32px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.weather-container {\n  background-color: white;\n  margin-top: 32px;\n  padding: 60px 40px;\n  border-radius: 8px;\n  box-shadow: 0 16px 20px 5px rgb(0 0 0 / 20%);\n}\n.name {\n  font-family: "Montserrat", sans-serif;\n  font-size: 40px;\n  font-weight: 500;\n  line-height: 1;\n  text-align: center;\n}\n.city-info-top {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.temp {\n  font-size: 34px;\n  font-weight: 600;\n  line-height: 1;\n  padding-bottom: 16px;\n}\n.description {\n  font-size: 20px;\n  font-weight: 500;\n  text-transform: capitalize;\n}\n.city-info-bottom {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  margin-top: 40px;\n}\n.city-temp-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\nh1 {\n  font-family: "Rubik Microbe", cursive;\n  font-size: 48px;\n  font-weight: 600;\n  padding-bottom: 16px;\n}\nh3 {\n  padding-top: 12px;\n  font-size: 17px;\n}\n.search-section {\n  display: flex;\n  gap: 8px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n}\ninput {\n  width: 40%;\n  padding: 4px 8px;\n  font-size: 16px;\n  line-height: 1;\n  outline: none;\n  border-radius: 4px;\n  border: 1px solid #cfcfcf;\n}\nbutton {\n  font-size: 16px;\n  font-weight: 500;\n  padding: 4px 12px;\n  background-color: #1a1a1a;\n  color: white;\n  border: 1px solid;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.footer {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  width: 100%;\n  padding: 10px;\n}\n\n.fa-github {\n  font-size: 24px;\n  transition: transform 0.3s ease-in-out;\n}\n\n.fa-github:hover {\n  transform: rotate(360deg) scale(1.2);\n}\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var p=[].concat(n[c]);o&&a[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),i&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=i):p[4]="".concat(i)),t.push(p))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([r]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},a=[],A=0;A<n.length;A++){var s=n[A],c=o.base?s[0]+o.base:s[0],p=r[c]||0,d="".concat(c," ").concat(p);r[c]=p+1;var l=e(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)t[l].references++,t[l].updater(u);else{var f=i(u,o);o.byIndex=A,t.splice(A,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var A=e(r[a]);t[A].references--}for(var s=o(n,i),c=0;c<r.length;c++){var p=e(r[c]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}r=s}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{const n=async n=>{const t=await(async n=>{try{const t=await fetch(n,{mode:"cors"});return await t.json()}catch(n){console.error(n)}})(n);return{name:t.name,description:t.weather[0].description,icon:t.weather[0].icon,temp:t.main.temp.toFixed(1)+"°F",feelsLike:t.main.feels_like.toFixed(1)+"°F",humidity:t.main.humidity+"°F",wind:t.wind.speed.toFixed(0)+" mph"}},t=async t=>{const e=await n(t);document.querySelector(".name").textContent=e.name,document.querySelector(".description").textContent=e.description,document.querySelector(".icon").src=`https://openweathermap.org/img/wn/${e.icon}@2x.png`,document.querySelector(".temp").textContent=e.temp,document.querySelector(".feels-like").textContent="Feels like "+e.feelsLike,document.querySelector(".humidity").textContent="Humidity: "+e.humidity,document.querySelector(".wind").textContent="Wind: "+e.wind},o=document.querySelector("input"),i=document.querySelector("button"),r=n=>{n.preventDefault();let e=o.value;t(`https://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=3b6208a31f3ddbc9ccd1d6206a490def&units=imperial`)};o.addEventListener("search",r),i.addEventListener("click",r);var a=e(379),A=e.n(a),s=e(795),c=e.n(s),p=e(569),d=e.n(p),l=e(565),u=e.n(l),f=e(216),m=e.n(f),C=e(589),h=e.n(C),g=e(28),B={};B.styleTagTransform=h(),B.setAttributes=u(),B.insert=d().bind(null,"head"),B.domAPI=c(),B.insertStyleElement=m(),A()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals,t("https://api.openweathermap.org/data/2.5/weather?q=london&APPID=3b6208a31f3ddbc9ccd1d6206a490def&units=imperial")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,